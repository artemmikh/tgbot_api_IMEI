import os
import re

import requests
from dotenv import load_dotenv
from requests import Response
from telegram import ParseMode

load_dotenv()


def send_message(update, context, message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram —á–∞—Ç."""
    chat = update.effective_chat
    context.bot.send_message(chat.id, message, parse_mode=ParseMode.MARKDOWN)


def check_user_permission(update, context):
    token: bool = check_user_in_whitelist(update.effective_chat.username)
    help_message: str = (
        '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø, '
        '–ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —É–∫–∞–∑–∞–≤ —Å–≤–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º username, –Ω–∞ '
        'http://127.0.0.1:8000/docs#/API/register_api_register_post')
    if token is None:
        send_message(update, context, message=help_message)
    else:
        return token


def check_user_in_whitelist(username: str) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ."""
    response: Response = requests.get(
        url=os.getenv('API_URL') + os.getenv('USER_CHECK_API_URL'),
        params={'tg_username': username}
    )
    if response.json().get('tg_username') == username:
        return response.json().get('token')


def luhn_check(imei: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç IMEI —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∞–ª–≥–æ—Ä–∏—Ç–º–∞ Luhn."""
    digits = [int(d) for d in imei]
    checksum = 0

    for i, digit in enumerate(reversed(digits)):
        if i % 2 == 1:
            digit *= 2
            if digit > 9:
                digit -= 9
        checksum += digit

    return checksum % 10 == 0


def check_imei_correct(imei: str) -> str:
    """–£–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–±–µ–ª—ã –∏–∑ imei –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –¥–ª–∏–Ω–∞ imei —Ä–∞–≤–Ω–∞ 15 —Ü–∏—Ñ—Ä–∞–º."""
    imei: str = imei.replace(' ', '')
    if not re.fullmatch(r"\d{15}", imei):
        return
    if not luhn_check(imei):
        return
    return imei


def format_imei_info(data: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç API –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ Telegram –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."""
    if data.get('status') != 'successful':
        return '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ IMEI.'
    properties = data.get('properties', {})
    formatted_lines = [f'üì± *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ*\n']

    for key, value in properties.items():
        formatted_key = key.replace('_', ' ').capitalize()
        if isinstance(value, bool):
            value = '–î–∞' if value else '–ù–µ—Ç'
        formatted_lines.append(f'*{formatted_key}:* {value}')

    return '\n'.join(formatted_lines)


def chek_imei(imei, token):
    """–î–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± IMEI."""
    response: Response = requests.post(
        url=os.getenv('API_URL') + os.getenv('IMEI_CHECK_API_URL'),
        params={'imei': imei, 'token': token}
    )
    return response.json()
